package net.projecteuler.level002;

import java.util.HashSet;

import net.projecteuler.utils.Utils;

/*
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers
 * are:
 *
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 *
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not
 * pentagonal.
 *
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
 * and D = |Pk − Pj| is minimised; what is the value of D?
 */
public class Problem0044 {

  public static void main(String[] args) {

    Utils.stopwatch(Problem0044::first_try);

  }

  public static void first_try() {

    int limit = 10000;

    int[] pentagonals = new int[limit];
    HashSet<Integer> checked = new HashSet<>(limit);

    for (int n = 1; n < limit; n++) {
      int p = n * (3 * n - 1) / 2;
      pentagonals[n] = p;
      checked.add(p);
    }

    for (int i = 1; i < limit; i++) {
      for (int j = i + 1; j < limit - 1; j++) {
        if (checked.contains(pentagonals[i] + pentagonals[j]) &&
            checked.contains(pentagonals[j] - pentagonals[i])) {
          System.out.println(
              pentagonals[i] + "," + pentagonals[j] + " D : " + (pentagonals[j] - pentagonals[i]));
        }
      }
    }

  }

}
